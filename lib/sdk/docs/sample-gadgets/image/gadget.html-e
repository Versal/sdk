<!DOCTYPE html>

<html>
<head>
  <title>gadget.js</title>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta name="viewport" content="width=device-width, target-densitydpi=160dpi, initial-scale=1.0; maximum-scale=1.0; user-scalable=0;">
  <link rel="stylesheet" media="all" href="docco.css" />
</head>
<body>
  <div id="container">
    <div id="background"></div>
    
    <ul class="sections">
        
          <li id="title">
              <div class="annotation">
                  <h1>gadget.js</h1>
              </div>
          </li>
        
        
        
        <li id="section-1">
            <div class="annotation">
              
              <div class="pilwrap ">
                <a class="pilcrow" href="#section-1">&#182;</a>
              </div>
              
            </div>
            
            <div class="content"><div class='highlight'><pre>define([], <span class="keyword">function</span>() {

  <span class="keyword">var</span> SimpleImageGadget = <span class="keyword">function</span>(player, config, $el) {
    <span class="keyword">this</span>.player = player;
    <span class="keyword">this</span>.config = config;
    <span class="keyword">this</span>.$el = $el;

    player.on(<span class="string">'toggleEdit'</span>, <span class="keyword">this</span>.toggleEdit, <span class="keyword">this</span>);
    player.on(<span class="string">'render'</span>, <span class="keyword">this</span>.render, <span class="keyword">this</span>);</pre></div></div>
            
        </li>
        
        
        <li id="section-2">
            <div class="annotation">
              
              <div class="pilwrap ">
                <a class="pilcrow" href="#section-2">&#182;</a>
              </div>
              <p><code>configChange</code> is called by the asset picker when an uploaded image is ready.</p>

            </div>
            
            <div class="content"><div class='highlight'><pre>    player.on(<span class="string">'configChange'</span>, <span class="keyword">this</span>.configChange, <span class="keyword">this</span>);
  };

  SimpleImageGadget.prototype.configChange = <span class="keyword">function</span>(config) {</pre></div></div>
            
        </li>
        
        
        <li id="section-3">
            <div class="annotation">
              
              <div class="pilwrap ">
                <a class="pilcrow" href="#section-3">&#182;</a>
              </div>
              <p>When an image is uploaded the asset picker will trigger a configuration change with the metadata of the newly uploaded image. Here we add it to the config and save it.</p>

            </div>
            
            <div class="content"><div class='highlight'><pre>    <span class="keyword">if</span> (config.image &amp;&amp; config.image !== <span class="keyword">this</span>.config.image) {
      <span class="keyword">this</span>.config.image = config.image;
    }</pre></div></div>
            
        </li>
        
        
        <li id="section-4">
            <div class="annotation">
              
              <div class="pilwrap ">
                <a class="pilcrow" href="#section-4">&#182;</a>
              </div>
              <p>Rerender the gadget with the newly uploaded image.</p>

            </div>
            
            <div class="content"><div class='highlight'><pre>    <span class="keyword">this</span>.render(<span class="literal">true</span>);
  };

  SimpleImageGadget.prototype.toggleEdit = <span class="keyword">function</span>(editable) {
    <span class="keyword">if</span> (!editable) <span class="keyword">this</span>.save();

    <span class="keyword">this</span>.render(editable);
  };</pre></div></div>
            
        </li>
        
        
        <li id="section-5">
            <div class="annotation">
              
              <div class="pilwrap ">
                <a class="pilcrow" href="#section-5">&#182;</a>
              </div>
              <p>An accessor for getting the URL to the gadget&#39;s image URL. Returns nothing if no image has been uploaded</p>

            </div>
            
            <div class="content"><div class='highlight'><pre>  SimpleImageGadget.prototype.imageUrl = <span class="keyword">function</span>() {
    <span class="keyword">if</span> (<span class="keyword">this</span>.config.image) {
      <span class="keyword">return</span> <span class="keyword">this</span>.config.image.representations[<span class="number">0</span>].location;
    }
  };

  SimpleImageGadget.prototype.render = <span class="keyword">function</span>(editable) {</pre></div></div>
            
        </li>
        
        
        <li id="section-6">
            <div class="annotation">
              
              <div class="pilwrap ">
                <a class="pilcrow" href="#section-6">&#182;</a>
              </div>
              <p>Initialize the caption to an empty string if we haven&#39;t set one yet.</p>

            </div>
            
            <div class="content"><div class='highlight'><pre>    <span class="keyword">this</span>.config.caption = <span class="keyword">this</span>.config.caption || <span class="string">''</span>;</pre></div></div>
            
        </li>
        
        
        <li id="section-7">
            <div class="annotation">
              
              <div class="pilwrap ">
                <a class="pilcrow" href="#section-7">&#182;</a>
              </div>
              <p>An empty template that we&#39;ll build up. Obviously we should be using real templating tools here but for simplicity&#39;s sake we&#39;re building up a string that we&#39;ll put in the DOM.</p>

            </div>
            
            <div class="content"><div class='highlight'><pre>    <span class="keyword">var</span> template = <span class="string">''</span>;</pre></div></div>
            
        </li>
        
        
        <li id="section-8">
            <div class="annotation">
              
              <div class="pilwrap ">
                <a class="pilcrow" href="#section-8">&#182;</a>
              </div>
              <p>If there&#39;s an image in play display it.</p>

            </div>
            
            <div class="content"><div class='highlight'><pre>    <span class="keyword">if</span> (<span class="keyword">this</span>.imageUrl()) {
      template += <span class="string">'&lt;p&gt;&lt;img src="'</span> + <span class="keyword">this</span>.imageUrl() + <span class="string">'" /&gt;&lt;/p&gt;'</span>;</pre></div></div>
            
        </li>
        
        
        <li id="section-9">
            <div class="annotation">
              
              <div class="pilwrap ">
                <a class="pilcrow" href="#section-9">&#182;</a>
              </div>
              <p>Provide control for displaying or entering caption.</p>

            </div>
            
            <div class="content"><div class='highlight'><pre>      <span class="keyword">var</span> tag = editable ? <span class="string">'textarea'</span> : <span class="string">'span'</span>;
      template += <span class="string">'&lt;'</span> + tag + <span class="string">' placeholder="Add a caption"&gt;'</span> + <span class="keyword">this</span>.config.caption + <span class="string">'&lt;/'</span> + tag + <span class="string">'&gt;'</span>;
    }</pre></div></div>
            
        </li>
        
        
        <li id="section-10">
            <div class="annotation">
              
              <div class="pilwrap ">
                <a class="pilcrow" href="#section-10">&#182;</a>
              </div>
              <p>When the gadget is in authoring mode display a button for adding or updating a new image.</p>

            </div>
            
            <div class="content"><div class='highlight'><pre>    <span class="keyword">if</span> (editable) {
      <span class="keyword">var</span> label = <span class="keyword">this</span>.imageUrl() ? <span class="string">'Change image'</span> : <span class="string">'Upload image'</span>;
      template += <span class="string">'&lt;p&gt;&lt;button&gt;'</span> + label + <span class="string">'&lt;/button&gt;&lt;/p&gt;'</span>;
    }</pre></div></div>
            
        </li>
        
        
        <li id="section-11">
            <div class="annotation">
              
              <div class="pilwrap ">
                <a class="pilcrow" href="#section-11">&#182;</a>
              </div>
              <p>Show the template we&#39;ve built up.</p>

            </div>
            
            <div class="content"><div class='highlight'><pre>    <span class="keyword">this</span>.$el.html(template);</pre></div></div>
            
        </li>
        
        
        <li id="section-12">
            <div class="annotation">
              
              <div class="pilwrap ">
                <a class="pilcrow" href="#section-12">&#182;</a>
              </div>
              <p>When the image upload button is clicked show the Versal asset picker.</p>

            </div>
            
            <div class="content"><div class='highlight'><pre>    <span class="keyword">var</span> player = <span class="keyword">this</span>.player;
    <span class="keyword">this</span>.$el.find(<span class="string">'button'</span>).click(<span class="keyword">function</span>() {
      player.trigger(<span class="string">'asset:select'</span>, { as: <span class="string">'image'</span>, type: <span class="string">'image'</span> });
    });
  };

  SimpleImageGadget.prototype.save = <span class="keyword">function</span>() {
    <span class="keyword">var</span> $captionEl = <span class="keyword">this</span>.$el.find(<span class="string">'textarea'</span>);
    <span class="keyword">var</span> caption = $captionEl.val() || <span class="string">''</span>;

    <span class="keyword">if</span> (caption !== <span class="keyword">this</span>.config.caption) {
      <span class="keyword">this</span>.config.caption = caption;
      <span class="keyword">this</span>.player.trigger(<span class="string">"save"</span>, <span class="keyword">this</span>.config);
    }
  };

  <span class="keyword">return</span> SimpleImageGadget;
});</pre></div></div>
            
        </li>
        
    </ul>
  </div>
</body>
</html>
